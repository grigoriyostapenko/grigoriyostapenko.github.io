(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var words = document.querySelectorAll(".dc-content__name");

for (var i = 0; i < words.length; i++) {
  console.log(words[i].innerText);
}

var sortWords = new Array();

for (var k = 0; k < words.length; k++) {
  sortWords[k] = words[k].innerText;
}

sortWords.sort();
console.log(sortWords);
var sortList = document.querySelector(".sort");
sortList.style.display = "none";
var sortButton = document.querySelector(".dc-header__button");
sortButton.addEventListener("click", function () {
  sortList.style.display = "flex";
  document.querySelector(".dc-content__list").style.display = "none";
});

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJwcm9qZWN0cy9kaWN0L3NyYy9qcy9hcHAuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQ0FBLElBQU0sS0FBSyxHQUFHLFFBQVEsQ0FBQyxnQkFBVCxDQUEwQixtQkFBMUIsQ0FBZDs7QUFFQSxLQUFJLElBQUksQ0FBQyxHQUFHLENBQVosRUFBZSxDQUFDLEdBQUcsS0FBSyxDQUFDLE1BQXpCLEVBQWlDLENBQUMsRUFBbEMsRUFBc0M7QUFDckMsRUFBQSxPQUFPLENBQUMsR0FBUixDQUFZLEtBQUssQ0FBQyxDQUFELENBQUwsQ0FBUyxTQUFyQjtBQUNBOztBQUVELElBQUksU0FBUyxHQUFHLElBQUksS0FBSixFQUFoQjs7QUFFQSxLQUFJLElBQUksQ0FBQyxHQUFHLENBQVosRUFBZSxDQUFDLEdBQUcsS0FBSyxDQUFDLE1BQXpCLEVBQWlDLENBQUMsRUFBbEMsRUFBc0M7QUFDckMsRUFBQSxTQUFTLENBQUMsQ0FBRCxDQUFULEdBQWUsS0FBSyxDQUFDLENBQUQsQ0FBTCxDQUFTLFNBQXhCO0FBQ0E7O0FBQ0QsU0FBUyxDQUFDLElBQVY7QUFDQSxPQUFPLENBQUMsR0FBUixDQUFZLFNBQVo7QUFHQSxJQUFNLFFBQVEsR0FBRyxRQUFRLENBQUMsYUFBVCxDQUF1QixPQUF2QixDQUFqQjtBQUNBLFFBQVEsQ0FBQyxLQUFULENBQWUsT0FBZixHQUF5QixNQUF6QjtBQUVBLElBQU0sVUFBVSxHQUFHLFFBQVEsQ0FBQyxhQUFULENBQXVCLG9CQUF2QixDQUFuQjtBQUNBLFVBQVUsQ0FBQyxnQkFBWCxDQUE0QixPQUE1QixFQUFxQyxZQUFNO0FBQzFDLEVBQUEsUUFBUSxDQUFDLEtBQVQsQ0FBZSxPQUFmLEdBQXlCLE1BQXpCO0FBQ0EsRUFBQSxRQUFRLENBQUMsYUFBVCxDQUF1QixtQkFBdkIsRUFBNEMsS0FBNUMsQ0FBa0QsT0FBbEQsR0FBNEQsTUFBNUQ7QUFDQSxDQUhEIiwiZmlsZSI6ImJ1bmRsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbigpe2Z1bmN0aW9uIHIoZSxuLHQpe2Z1bmN0aW9uIG8oaSxmKXtpZighbltpXSl7aWYoIWVbaV0pe3ZhciBjPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIWYmJmMpcmV0dXJuIGMoaSwhMCk7aWYodSlyZXR1cm4gdShpLCEwKTt2YXIgYT1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK2krXCInXCIpO3Rocm93IGEuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixhfXZhciBwPW5baV09e2V4cG9ydHM6e319O2VbaV1bMF0uY2FsbChwLmV4cG9ydHMsZnVuY3Rpb24ocil7dmFyIG49ZVtpXVsxXVtyXTtyZXR1cm4gbyhufHxyKX0scCxwLmV4cG9ydHMscixlLG4sdCl9cmV0dXJuIG5baV0uZXhwb3J0c31mb3IodmFyIHU9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZSxpPTA7aTx0Lmxlbmd0aDtpKyspbyh0W2ldKTtyZXR1cm4gb31yZXR1cm4gcn0pKCkiLCJjb25zdCB3b3JkcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuZGMtY29udGVudF9fbmFtZVwiKTtcclxuXHJcbmZvcihsZXQgaSA9IDA7IGkgPCB3b3Jkcy5sZW5ndGg7IGkrKykge1xyXG5cdGNvbnNvbGUubG9nKHdvcmRzW2ldLmlubmVyVGV4dCk7XHJcbn1cclxuXHJcbmxldCBzb3J0V29yZHMgPSBuZXcgQXJyYXkoKTtcclxuXHJcbmZvcihsZXQgayA9IDA7IGsgPCB3b3Jkcy5sZW5ndGg7IGsrKykge1xyXG5cdHNvcnRXb3Jkc1trXSA9IHdvcmRzW2tdLmlubmVyVGV4dDtcclxufVxyXG5zb3J0V29yZHMuc29ydCgpO1xyXG5jb25zb2xlLmxvZyhzb3J0V29yZHMpO1xyXG5cclxuXHJcbmNvbnN0IHNvcnRMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zb3J0XCIpO1xyXG5zb3J0TGlzdC5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcblxyXG5jb25zdCBzb3J0QnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5kYy1oZWFkZXJfX2J1dHRvblwiKTtcclxuc29ydEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xyXG5cdHNvcnRMaXN0LnN0eWxlLmRpc3BsYXkgPSBcImZsZXhcIjtcclxuXHRkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmRjLWNvbnRlbnRfX2xpc3RcIikuc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG59KSJdLCJwcmVFeGlzdGluZ0NvbW1lbnQiOiIvLyMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbTV2WkdWZmJXOWtkV3hsY3k5aWNtOTNjMlZ5TFhCaFkyc3ZYM0J5Wld4MVpHVXVhbk1pTENKd2NtOXFaV04wY3k5a2FXTjBMM055WXk5cWN5OWhjSEF1YW5NaVhTd2libUZ0WlhNaU9sdGRMQ0p0WVhCd2FXNW5jeUk2SWtGQlFVRTdPenRCUTBGQkxFbEJRVTBzUzBGQlN5eEhRVUZITEZGQlFWRXNRMEZCUXl4blFrRkJWQ3hEUVVFd1FpeHRRa0ZCTVVJc1EwRkJaRHM3UVVGRlFTeExRVUZKTEVsQlFVa3NRMEZCUXl4SFFVRkhMRU5CUVZvc1JVRkJaU3hEUVVGRExFZEJRVWNzUzBGQlN5eERRVUZETEUxQlFYcENMRVZCUVdsRExFTkJRVU1zUlVGQmJFTXNSVUZCYzBNN1FVRkRja01zUlVGQlFTeFBRVUZQTEVOQlFVTXNSMEZCVWl4RFFVRlpMRXRCUVVzc1EwRkJReXhEUVVGRUxFTkJRVXdzUTBGQlV5eFRRVUZ5UWp0QlFVTkJPenRCUVVWRUxFbEJRVWtzVTBGQlV5eEhRVUZITEVsQlFVa3NTMEZCU2l4RlFVRm9RanM3UVVGRlFTeExRVUZKTEVsQlFVa3NRMEZCUXl4SFFVRkhMRU5CUVZvc1JVRkJaU3hEUVVGRExFZEJRVWNzUzBGQlN5eERRVUZETEUxQlFYcENMRVZCUVdsRExFTkJRVU1zUlVGQmJFTXNSVUZCYzBNN1FVRkRja01zUlVGQlFTeFRRVUZUTEVOQlFVTXNRMEZCUkN4RFFVRlVMRWRCUVdVc1MwRkJTeXhEUVVGRExFTkJRVVFzUTBGQlRDeERRVUZUTEZOQlFYaENPMEZCUTBFN08wRkJRMFFzVTBGQlV5eERRVUZETEVsQlFWWTdRVUZEUVN4UFFVRlBMRU5CUVVNc1IwRkJVaXhEUVVGWkxGTkJRVm83UVVGSFFTeEpRVUZOTEZGQlFWRXNSMEZCUnl4UlFVRlJMRU5CUVVNc1lVRkJWQ3hEUVVGMVFpeFBRVUYyUWl4RFFVRnFRanRCUVVOQkxGRkJRVkVzUTBGQlF5eExRVUZVTEVOQlFXVXNUMEZCWml4SFFVRjVRaXhOUVVGNlFqdEJRVVZCTEVsQlFVMHNWVUZCVlN4SFFVRkhMRkZCUVZFc1EwRkJReXhoUVVGVUxFTkJRWFZDTEc5Q1FVRjJRaXhEUVVGdVFqdEJRVU5CTEZWQlFWVXNRMEZCUXl4blFrRkJXQ3hEUVVFMFFpeFBRVUUxUWl4RlFVRnhReXhaUVVGTk8wRkJRekZETEVWQlFVRXNVVUZCVVN4RFFVRkRMRXRCUVZRc1EwRkJaU3hQUVVGbUxFZEJRWGxDTEUxQlFYcENPMEZCUTBFc1JVRkJRU3hSUVVGUkxFTkJRVU1zWVVGQlZDeERRVUYxUWl4dFFrRkJka0lzUlVGQk5FTXNTMEZCTlVNc1EwRkJhMFFzVDBGQmJFUXNSMEZCTkVRc1RVRkJOVVE3UVVGRFFTeERRVWhFSWl3aVptbHNaU0k2SW1kbGJtVnlZWFJsWkM1cWN5SXNJbk52ZFhKalpWSnZiM1FpT2lJaUxDSnpiM1Z5WTJWelEyOXVkR1Z1ZENJNld5SW9ablZ1WTNScGIyNG9LWHRtZFc1amRHbHZiaUJ5S0dVc2JpeDBLWHRtZFc1amRHbHZiaUJ2S0drc1ppbDdhV1lvSVc1YmFWMHBlMmxtS0NGbFcybGRLWHQyWVhJZ1l6MWNJbVoxYm1OMGFXOXVYQ0k5UFhSNWNHVnZaaUJ5WlhGMWFYSmxKaVp5WlhGMWFYSmxPMmxtS0NGbUppWmpLWEpsZEhWeWJpQmpLR2tzSVRBcE8ybG1LSFVwY21WMGRYSnVJSFVvYVN3aE1DazdkbUZ5SUdFOWJtVjNJRVZ5Y205eUtGd2lRMkZ1Ym05MElHWnBibVFnYlc5a2RXeGxJQ2RjSWl0cEsxd2lKMXdpS1R0MGFISnZkeUJoTG1OdlpHVTlYQ0pOVDBSVlRFVmZUazlVWDBaUFZVNUVYQ0lzWVgxMllYSWdjRDF1VzJsZFBYdGxlSEJ2Y25Sek9udDlmVHRsVzJsZFd6QmRMbU5oYkd3b2NDNWxlSEJ2Y25SekxHWjFibU4wYVc5dUtISXBlM1poY2lCdVBXVmJhVjFiTVYxYmNsMDdjbVYwZFhKdUlHOG9ibng4Y2lsOUxIQXNjQzVsZUhCdmNuUnpMSElzWlN4dUxIUXBmWEpsZEhWeWJpQnVXMmxkTG1WNGNHOXlkSE45Wm05eUtIWmhjaUIxUFZ3aVpuVnVZM1JwYjI1Y0lqMDlkSGx3Wlc5bUlISmxjWFZwY21VbUpuSmxjWFZwY21Vc2FUMHdPMms4ZEM1c1pXNW5kR2c3YVNzcktXOG9kRnRwWFNrN2NtVjBkWEp1SUc5OWNtVjBkWEp1SUhKOUtTZ3BJaXdpWTI5dWMzUWdkMjl5WkhNZ1BTQmtiMk4xYldWdWRDNXhkV1Z5ZVZObGJHVmpkRzl5UVd4c0tGd2lMbVJqTFdOdmJuUmxiblJmWDI1aGJXVmNJaWs3WEhKY2JseHlYRzVtYjNJb2JHVjBJR2tnUFNBd095QnBJRHdnZDI5eVpITXViR1Z1WjNSb095QnBLeXNwSUh0Y2NseHVYSFJqYjI1emIyeGxMbXh2WnloM2IzSmtjMXRwWFM1cGJtNWxjbFJsZUhRcE8xeHlYRzU5WEhKY2JseHlYRzVzWlhRZ2MyOXlkRmR2Y21SeklEMGdibVYzSUVGeWNtRjVLQ2s3WEhKY2JseHlYRzVtYjNJb2JHVjBJR3NnUFNBd095QnJJRHdnZDI5eVpITXViR1Z1WjNSb095QnJLeXNwSUh0Y2NseHVYSFJ6YjNKMFYyOXlaSE5iYTEwZ1BTQjNiM0prYzF0clhTNXBibTVsY2xSbGVIUTdYSEpjYm4xY2NseHVjMjl5ZEZkdmNtUnpMbk52Y25Rb0tUdGNjbHh1WTI5dWMyOXNaUzVzYjJjb2MyOXlkRmR2Y21SektUdGNjbHh1WEhKY2JseHlYRzVqYjI1emRDQnpiM0owVEdsemRDQTlJR1J2WTNWdFpXNTBMbkYxWlhKNVUyVnNaV04wYjNJb1hDSXVjMjl5ZEZ3aUtUdGNjbHh1YzI5eWRFeHBjM1F1YzNSNWJHVXVaR2x6Y0d4aGVTQTlJRndpYm05dVpWd2lPMXh5WEc1Y2NseHVZMjl1YzNRZ2MyOXlkRUoxZEhSdmJpQTlJR1J2WTNWdFpXNTBMbkYxWlhKNVUyVnNaV04wYjNJb1hDSXVaR010YUdWaFpHVnlYMTlpZFhSMGIyNWNJaWs3WEhKY2JuTnZjblJDZFhSMGIyNHVZV1JrUlhabGJuUk1hWE4wWlc1bGNpaGNJbU5zYVdOclhDSXNJQ2dwSUQwK0lIdGNjbHh1WEhSemIzSjBUR2x6ZEM1emRIbHNaUzVrYVhOd2JHRjVJRDBnWENKbWJHVjRYQ0k3WEhKY2JseDBaRzlqZFcxbGJuUXVjWFZsY25sVFpXeGxZM1J2Y2loY0lpNWtZeTFqYjI1MFpXNTBYMTlzYVhOMFhDSXBMbk4wZVd4bExtUnBjM0JzWVhrZ1BTQmNJbTV2Ym1WY0lqdGNjbHh1ZlNraVhYMD0ifQ==
