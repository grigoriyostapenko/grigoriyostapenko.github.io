(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

//0-12 - baby
//13-18 - teen
//19-68 adult
//61-100 - pens
var form = document.querySelector('.form');
var answer = document.querySelector('.answer');

function handleSubmit(event) {
  event.preventDefault();
  var data = {};
  var name = form.elements.name;
  var surname = form.elements.surname;
  var age = form.elements.age;

  for (var i = 0; i < form.elements.length; i++) {
    if (form.elements[i].name === 'submit') {
      continue;
    }

    data[form.elements[i].name] = form.elements[i].value;
  }

  function getStatus(age) {
    if (age < 0 || age > 150) {
      return "Incorrect value";
    }

    if (age > 0 && age <= 12) {
      return "baby";
    } else if (age >= 13 && age <= 18) {
      return "teen";
    } else if (age >= 19 && age <= 64) {
      return "adult";
    } else {
      return "pens";
    }
  }

  answer.innerText = "".concat(data.name, " ").concat(data.surname, " is ").concat(getStatus(+data.age));
}

form.addEventListener('submit', handleSubmit);
var pallindromForm = document.createElement('form');
pallindromForm.classList.add('pallindrom-form');
document.body.appendChild(pallindromForm);
var pallindromInput = document.createElement('input');
var pallindromSubmit = document.createElement('input');
var pallindromAnswer = document.createElement('p');
pallindromInput.setAttribute('name', 'number');
pallindromSubmit.setAttribute('type', 'submit');
pallindromSubmit.setAttribute('value', 'submit');
pallindromForm.appendChild(pallindromInput);
pallindromForm.appendChild(pallindromSubmit);
pallindromForm.appendChild(pallindromAnswer);
pallindromForm.addEventListener('submit', function (event) {
  event.preventDefault();

  if (pallindromInput.value.length !== 5) {
    pallindromAnswer.innerText = "\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u043F\u044F\u0442\u0438\u0437\u043D\u0430\u0447\u043D\u043E\u0435 \u0447\u0438\u0441\u043B\u043E";
    return;
  }

  var isPallindrom = pallindromInput.value.split("").reverse().join('') === pallindromInput.value;
  pallindromAnswer.innerText = isPallindrom ? 'Pallindrom' : 'Not Pallindrom';
});
var number = document.querySelector(".number-form");
console.log(number);
var spanFromSpan = document.querySelectorAll('.spaniel');
var ubaton = document.querySelector('.innerBaton');
ubaton.addEventListener('submit', batonNeVkysniy);

function batonNeVkysniy(event) {
  event.preventDefault();
  spanFromSpan.innerText = 'okmoinokms';
}

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,
