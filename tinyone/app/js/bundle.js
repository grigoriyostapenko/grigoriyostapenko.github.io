(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var _functions = require("./functions.js");

var words = document.querySelectorAll('.th-main__list-desc');
console.log(words);
Array.from(words).forEach(function (desc) {
  var substr = desc.outerText.substring(0, 120) + '…';
  desc.innerText = substr;
});
var form = document.querySelector('.form');
var answer = document.querySelector('.th-footer__title');
form.addEventListener('submit', handleSubmit);

function handleSubmit(event) {
  event.preventDefault();
  var data = {};
  var mail = form.elements.mail;

  for (var i = 0; i < form.elements.length; i++) {
    if (form.elements[i].name === 'submit') {
      continue;
    }

    data[form.elements[i].name] = form.elements[i].value;
  }

  if (data.mail === '') {
    answer.innerText = "Enter somewhere pls";
  } else {
    if (data.mail === 'Сам вводи') {
      answer.innerText = "\u0422\u044B \u043D\u0430 \u043A\u043E\u0433\u043E \u0431\u044B\u043A\u0430\u043D\u0443\u043B, \u0447\u041E\u0440\u0442";
    } else {
      answer.innerText = "".concat(data.mail);
    }
  }
}

},{"./functions.js":2}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.multiply = multiply;
var myVar = 5;
var variable = 10;

function multiply(a, b) {
  return a * b;
}

multiply(5, 3);

},{}]},{},[1])

//# sourceMappingURL=data:application/json;charset=utf8;base64,
